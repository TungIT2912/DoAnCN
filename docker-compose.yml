
# services:
#   backend:
#     build: .
#     container_name: backend
#     ports:
#       - "7100:7100"
#       - "7101:7101"
#     environment:
#       - ASPNETCORE_ENVIRONMENT=Development
#       - ConnectionStrings__DefaultConnection=Server=db;Database=QLNhaKhoaa;User=sa;Password=aA@123456789;TrustServerCertificate=True;
#     volumes:
#       - ./dataprotection-keys:/root/.aspnet/DataProtection-Keys
#     depends_on:
#       - db


#   db:
#     image: mcr.microsoft.com/mssql/server:2022-latest
#     container_name: database
#     ports:
#       - "11433:1433"
#     environment:
#       SA_PASSWORD: "aA@123456789"
#       ACCEPT_EULA: "Y"
#     volumes:
#       - sqlserver_data:/var/opt/mssql

# volumes:
#   sqlserver_data:
version: '3.8'
services:
  backend:
    build: .
    container_name: backend
    ports:
      - "8080:80"
      - "8443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=db;Database=QLNhaKhoaa;User=sa;Password=aA%40123456789;TrustServerCertificate=True;
    volumes:
      - ./dataprotection-keys:/root/.aspnet/DataProtection-Keys
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: database
    ports:
      - "11433:1433"
    environment:
      SA_PASSWORD: "aA@123456789"
      ACCEPT_EULA: "Y"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd", "-U", "sa", "-P", "aA@123456789", "-Q", "SELECT 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  sqlserver_data: