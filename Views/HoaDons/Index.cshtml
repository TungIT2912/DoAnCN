@model IEnumerable<WebQuanLyNhaKhoa.DTO.HoaDonDTO>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

<div class="mobile-menu-overlay"></div>

<div class="main-container">
    <div class="xs-pd-20-10 pd-ltr-20">
        <div class="row clearfix progress-box">
            <div class="col-lg-12">
                <div class="card-box mb-30">
                    <div class="pd-20">
                        <div class="table-wrapper">
                            <div class="table-title">
                                <h2>Thông tin các hóa đơn</h2>
                            </div>
                        </div>
                    </div>
                    <div class="pb-20">

                        <table class="table table-striped table-hover" id="khoTable">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 200px;">Tên bệnh nhân</th>
                                    <th scope="col">Phương thức thanh toán</th>
                                    <th scope="col">Tiền thuốc</th>
                                    <th scope="col">Tiền điều trị</th>
                                    <th scope="col">Tổng tiền</th>
                                    <th scope="col">Ngày lập</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                        <div id="paginationContainer" class="pagination-controls"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    let currentPage = 1;
    const pageSize = 10;

    async function fetchKhoes(pageNumber = 1) {
        try {
            const response = await fetch(`HoaDons/api/HoaDons?pageNumber=${pageNumber}&pageSize=${pageSize}`);
            if (!response.ok) {
                console.error('Response status:', response.status); // Log status
                throw new Error('Network response was not ok');
            }
            const result = await response.json();
            const khoes = result.data;
            totalItems = result.totalItems;

            displayData(khoes);
            setupPaginationControls(totalItems);
        } catch (error) {
            console.error('Fetch error:', error);
            alert('Không thể tải dữ liệu. Vui lòng thử lại.');
        }
    }

    function displayData(khoes) {
        const tableBody = document.getElementById('khoTable').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = '';
        khoes.forEach(nv => {
            const row = document.createElement('tr');
            const date = new Date(nv.NgayLap);
            const formattedDate = date.toLocaleDateString('en-GB'); // Formats as dd/MM/yyyy
            const formattedDonGiaThuoc = parseFloat(nv.TienThuoc).toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });
            const formattedDonGiaDieuTri = parseFloat(nv.TienDieuTri).toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });
            const formattedDonGiaTongTien = parseFloat(nv.TongTien).toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });
            row.innerHTML = `
                <td>${nv.tenBn}</td>
                <td>${nv.PhuongThucThanhToan}</td>
                <td>${formattedDonGiaThuoc}</td>
                <td>${formattedDonGiaDieuTri}</td>
                <td>${formattedDonGiaTongTien}</td>
                        <td>${formattedDate}</td>
                        <td>
                    <a href="/Admin/ChiTietHoaDons/api/ChiTietHoaDons/Detail/${nv.Idkham}"><i class="dw dw-delete"></i> Chi tiết</a>
                        </td>
                    `;
            tableBody.appendChild(row);
        });
    }

    function setupPaginationControls(totalItems) {
        const totalPages = Math.ceil(totalItems / pageSize);
        const paginationContainer = document.getElementById('paginationContainer');
        paginationContainer.innerHTML = '';

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.onclick = () => changePage(i);
            paginationContainer.appendChild(button);
        }
    }

    function changePage(pageNumber) {
        fetchKhoes(pageNumber);
    }

    document.addEventListener('DOMContentLoaded', () => {
        fetchKhoes(currentPage);
    });
</script>
