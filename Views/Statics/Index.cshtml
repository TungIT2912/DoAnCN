@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    decimal? totalRevenue = ViewBag.TotalRevenue;
    int? year = ViewBag.Year;
    var cultureInfo = new System.Globalization.CultureInfo("vi-VN");
    var userCount = ViewData["UserCount"];
}

<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

<div class="mobile-menu-overlay"></div>

<div class="main-container">
    <div class="xs-pd-20-10 pd-ltr-20">
        <div class="row clearfix progress-box">
            <div class="col-lg-12">
                <div class="card-box mb-30">

                    <div class="pb-20">
                        <form id="yearForm" method="post">
                            <input name="year" type="number" id="inputYear" min="1900" max="2100" placeholder="Nhập năm..." required>
                            <button type="submit">Xem doanh thu</button>
                        </form>
                        <div id="revenueData" style="display: none;">
                            <div class="container-fluid pt-4 px-4 d-flex flex-wrap nowrap">
                                <div class="col-sm-6 col-xl-3">
                                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                                        <i class="fa fa-chart-bar fa-3x text-primary"></i>
                                        <div class="ms-3">
                                            <p class="mb-2">Tổng doanh thu của năm <span id="revenueYear"></span></p>
                                            <h6 class="mb-0" id="totalRevenue"></h6>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-6 col-xl-3">
                                    <div class="bg-light rounded d-flex align-items-center justify-content-between p-4">
                                        <i class="fa fa-chart-bar fa-3x text-primary"></i>
                                        <div class="ms-3">
                                            <p class="mb-2">Tổng bệnh nhân</p>
                                            <h6 class="mb-0" id="userCount"></h6>
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <div class="charts-container">
                                <div class="chart">
                                    <h4 class="text-blue h4" style="text-align:center">Biểu đồ thống kê doanh thu năm <span id="chartYear"></span></h4>
                                    <canvas id="myChart" width="400" height="200"></canvas>

                                </div>
                            </div>
                        </div>
                        </div>
                     
                    </div>
                </div>
            </div>
        </div>

    </div>
@section Scripts {
    <script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        let chartInstance = null;
        const initialRevenueData = @Html.Raw(Json.Serialize(ViewData["InitialRevenueData"]));
        const initialYear = @ViewData["Years"];
        const totalRevenue = @ViewData["TotalRevenue1"];
        const userCount = @ViewData["UserCount"];

        document.addEventListener('DOMContentLoaded', () => {
            console.log("Initial Revenue Data:", initialRevenueData);
            console.log("Initial Year:", initialYear);
            console.log("Total Revenue:", totalRevenue);
            console.log("User Count:", userCount);

            const revenueYearElement = document.getElementById('revenueYear');
            const chartYearElement = document.getElementById('chartYear');
            const totalRevenueElement = document.getElementById('totalRevenue');
            const userCountElement = document.getElementById('userCount');

            if (revenueYearElement) revenueYearElement.textContent = initialYear;
            if (chartYearElement) chartYearElement.textContent = initialYear;
            if (totalRevenueElement) totalRevenueElement.textContent = totalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
            if (userCountElement) userCountElement.textContent = userCount;

            const revenuePerMonth = Array.isArray(initialRevenueData) && initialRevenueData.length === 12 ? initialRevenueData : Array(12).fill(0);
            const chartLabels = Array.from({ length: 12 }, (_, i) => `Tháng ${i + 1}`);

            if (chartInstance) {
                chartInstance.destroy(); // Destroy previous chart instance
            }

            const ctx = document.getElementById('myChart').getContext('2d');
            

            if (ctx) {
                ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);

                chartInstance = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: chartLabels,
                        datasets: [{
                            label: 'Doanh thu',
                            data: revenuePerMonth,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function (value) {
                                        return value + ' triệu';
                                    }
                                }
                            }
                        }
                    }
                });
                console.log(Chart); 

            } else {
                console.error("Chart canvas not found!");
            }
        });


        document.getElementById('yearForm').addEventListener('submit', async function (event) {
            event.preventDefault(); 

            const year = document.getElementById('inputYear').value; 
            console.log("Selected year:", year);

            try {
                const response = await fetch(`Statics/api/Statics/${year}`);
                if (!response.ok) {
                    throw new Error("Failed to fetch data");
                }

                const result = await response.json();
                console.log("API response:", result);

                if (result && Array.isArray(result.RevenueData)) {
                    console.log("revenueData:", result.RevenueData);

                    document.getElementById('revenueYear').textContent = year;
                    document.getElementById('chartYear').textContent = year;
                    document.getElementById('totalRevenue').textContent = result.TotalRevenue.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                    document.getElementById('userCount').textContent = result.UserCount;

                    const revenueData = result.RevenueData;
                    const chartData = revenueData.map(item => item.Value ?? 0); // Adjust for possible null
                    const chartLabels = revenueData.map(item => item.Label);

                    document.getElementById('revenueData').style.display = 'block';

                    if (chartInstance) {
                        chartInstance.destroy(); // Destroy previous chart instance
                    }

                    const ctx = document.getElementById('myChart').getContext('2d');
                    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);

                    chartInstance = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: chartLabels,
                            datasets: [{
                                label: 'Doanh thu',
                                data: chartData,
                                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: function (value) {
                                            return value + ' triệu';
                                        }
                                    }
                                }
                            }
                        }
                    });
                } else {
                    console.error("Invalid data format:", result);
                    alert("Dữ liệu không hợp lệ.");
                }
            } catch (error) {
                console.error("Error fetching data:", error);
                alert("Không thể tải dữ liệu. Vui lòng thử lại.");
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

