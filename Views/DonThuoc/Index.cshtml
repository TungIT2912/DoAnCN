@{
    ViewData["Title"] = "Danh sách Đơn Thuốc";
    Layout = "~/Views/Shared/_LayoutNhanVien.cshtml";
}

<h1 class="title">@ViewData["Title"]</h1>

<div class="top-actions">
    <button onclick="location.href='/DonThuoc/Create'" class="btn-create">Tạo Đơn Thuốc</button>
</div>

<div id="donThuocContainer" class="table-container">
    <!-- Data fetched from the API will be displayed here -->
    <p>Loading...</p>
</div>

<script>
    // Function to fetch data from 'api/GetDonThuoc'
    async function fetchDonThuocData() {
        try {
            const response = await fetch('/DonThuoc/api/GetDonThuoc');
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }

            const donThuocs = await response.json();
            const container = document.getElementById('donThuocContainer');

            if (!Array.isArray(donThuocs) || donThuocs.length === 0) {
                container.innerHTML = '<p>Không tìm thấy dữ liệu.</p>';
                return;
            }

            let htmlContent = `
                <table class="styled-table">
                    <thead>
                        <tr>
                            <th>Id Khám</th>
                            <th>Tên Thuốc</th>
                            <th>Thành Giá</th>
                            <th>Tổng Tiền</th>
                            <th>Số Lượng</th>
                            <th>Ngày Lập</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            donThuocs.forEach(donThuoc => {
                htmlContent += `
                    <tr id="row-${donThuoc.Idkham}">
                        <td>${donThuoc.Idkham}</td>
                        <td>${donThuoc.tenThuoc}</td>
                        <td>${donThuoc.ThanhGia}</td>
                        <td>${donThuoc.TongTien}</td>
                        <td>${donThuoc.SoLuong}</td>
                        <td>${new Date(donThuoc.NgayLapDt).toLocaleDateString()}</td>
                        <td>
                            <button onclick="deleteDonThuoc(${donThuoc.IdhoaDon})" class="btn-delete">Delete</button>
                        </td>
                    </tr>
                `;
            });

            htmlContent += `
                    </tbody>
                </table>
            `;

            container.innerHTML = htmlContent;

        } catch (error) {
            console.error('Error fetching Don Thuoc data:', error);
            document.getElementById('donThuocContainer').innerHTML = `<p>Lỗi khi tải dữ liệu: ${error.message}</p>`;
        }
    }

    // Function to delete a Don Thuoc
    async function deleteDonThuoc(id) {
        if (!confirm('Bạn có chắc chắn muốn xóa đơn thuốc này?')) {
            return;
        }

        try {
            const response = await fetch(`/DonThuoc/api/DeleteDonThuoc/${id}`, { method: 'DELETE' });
            if (!response.ok) {
                const errorMessage = await response.text();
                alert(`Không thể xóa: ${errorMessage}`);
                return;
            }

            const row = document.getElementById(`row-${id}`);
            if (row) row.remove();
            alert('Xóa đơn thuốc thành công.');
        } catch (error) {
            console.error('Error deleting Don Thuoc:', error);
            alert(`Lỗi khi xóa: ${error.message}`);
        }
    }

    // Fetch data when the page loads
    document.addEventListener('DOMContentLoaded', fetchDonThuocData);
</script>

<style>
    body {
        font-family: 'Arial', sans-serif;
        background: #f4f6f9;
        margin: 0;
        padding: 20px;
    }

    .title {
        text-align: center;
        color: #4a90e2;
        margin-top: 20px;
        font-size: 2rem;
    }

    .top-actions {
        display: flex;
        justify-content: flex-start;
        margin-bottom: 20px;
        margin-top: 40px;
    }

    .btn-create {
        background-color: #28a745;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-create:hover {
        background-color: #218838;
    }

    .table-container {
        overflow-x: auto;
    }

    .styled-table {
        width: 100%;
        border-collapse: collapse;
        margin: 20px 0;
        font-size: 1rem;
        text-align: left;
        border: 1px solid #ddd;
        border-radius: 8px;
    }

    .styled-table th,
    .styled-table td {
        padding: 10px 15px;
        border-bottom: 1px solid #ddd;
    }

    .styled-table th {
        background-color: #007bff;
        color: white;
    }

    .styled-table tr:hover {
        background-color: #f1f1f1;
    }

    .btn-delete {
        background-color: #dc3545;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    .btn-delete:hover {
        background-color: #c82333;
    }
</style>
