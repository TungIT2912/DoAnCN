@model WebQuanLyNhaKhoa.DTO.RegisFormDTO

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.css">
*@
<div class="table-wrapper">
    <div class="table-title">
        <h2>Danh sách nhân viên</h2>
        <a href="~/Admin/NhanViens/nhanviens" class="btn btn-outline-primary"><i class="bi bi-plus-square-fill"></i> Thêm mới</a>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-hover" id="nhanVienTable">
            <thead class="thead-dark text-center">
                <tr>
                    <th scope="col">Tên nhân viên</th>
                    <th scope="col">Chức vụ</th>
                    <th scope="col">Ngày tạo đơn</th>
                    <th scope="col">Trạng thái đơn</th>
                    <th scope="col" style="width: 200px;height:100px">Action</th>
                </tr>
            </thead>
            <tbody class="text-center">
            </tbody>


        </table>
    </div>
    <div id="paginationContainer" class="pagination-controls"></div>
</div>
                </div>
            </div>
        </div>

<script>
    let currentPage = 1;
    const pageSize = 10;



    async function fetchNhanViens(page) {
        try {
            const response = await fetch(`/Admin/ChangeShift/api/ListShift?pageNumber=${page}&pageSize=${pageSize}`);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const result = await response.json();
            const nhanViens = result.data;
            totalItems = result.totalItems;
            console.log(nhanViens);
            displayData(nhanViens);
            setupPaginationControls(totalItems);
        } catch (error) {
            console.error('Fetch error:', error);
            alert('Không thể tải dữ liệu. Vui lòng thử lại.');
        }
    }

    function displayData(nhanViens) {
        const tableBody = document.getElementById('nhanVienTable').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = ''; // Clear previous rows

        nhanViens.forEach(nv => {
            let genderText;
            if (nv.Status == "Waiting") {
                genderText = 'Đang chờ xủ lí';
            } else if (nv.Status ==  "Accepted") {
                genderText = 'Đã được duyệt';
            }
            else{
                genderText = 'Đã bị từ chối';
            }
            const row = document.createElement('tr');
            const formattedNgayKhamDau = new Date(nv.CreateDay).toLocaleDateString('en-GB');
            row.innerHTML = `
                        <td>${nv.Ten}</td>
                        <td>${nv.ChucVu}</td>
                        <td>${formattedNgayKhamDau}</td>
                        <td>${genderText}</td>
                    <td>
                         <a href="/Admin/ChangeShift/api/ChangeShift/Detail/${nv.RegisFormId}" class="dropdown-item"><i class="dw dw-eye"></i> Chi tiết</a>
                    </td>
                `;
            tableBody.appendChild(row);
        });
    }


    function setupPaginationControls(totalItems) {
        const totalPages = Math.ceil(totalItems / pageSize);
        const paginationContainer = document.getElementById('paginationContainer');
        paginationContainer.innerHTML = ''; // Clear existing buttons

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.onclick = () => changePage(i);
            paginationContainer.appendChild(button);
        }
    }

    function changePage(pageNumber) {
        fetchNhanViens(pageNumber);
    }

    document.addEventListener('DOMContentLoaded', () => {
        fetchNhanViens(currentPage);
    });
</script>
