@model IEnumerable<WebQuanLyNhaKhoa.DTO.DichVuDTO>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

<div class="mobile-menu-overlay"></div>

<div class="main-container">
    <div class="xs-pd-20-10 pd-ltr-20">
        <p>
            <a asp-controller="DichVus" asp-action="Create" class="btn border border-secondary rounded-pill px-3 text-primary"><i class="bi bi-plus-square-fill"></i> Nhập thêm dịch vụ</a>
        </p>
        <br>
        <hr>
        <div class="row clearfix progress-box">
            <div class="col-lg-12">
                <div class="card-box mb-30">
                    <div class="pd-20">
                        <div class="table-wrapper">
                            <div class="table-title">
                                <h2>Thông tin dịch vụ</h2>
                            </div>
                    

                    </div>
                    <div class="pb-20">

                        <table class="table table-striped table-hover" id="dicvuTable">
                            <thead>
                                <tr>
                                    <th scope="col" style="width: 200px;">Tên dịch vụ</th>
                                    <th scope="col">Đơn vị tính</th>
                                    <th scope="col">Đơn Giá</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>

                        </table>
                        <div id="paginationContainer" class="pagination-controls"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
</div>>
<script>
    let currentPage = 1;
    const pageSize = 10;
    async function fetchKhoes(pageNumber = 1) {
        try {
            const response = await fetch(`DichVus/api/DichVus?pageNumber=${pageNumber}&pageSize=${pageSize}`);
            if (!response.ok) {
                console.error('Response status:', response.status); // Log status
                throw new Error('Network response was not ok');
            }
            const result = await response.json();
            const khoes = result.data;
            totalItems = result.totalItems;

            displayData(khoes);
            setupPaginationControls(totalItems);
           
        } catch (error) {
            console.error('Fetch error:', error);
            alert('Không thể tải dữ liệu. Vui lòng thử lại.');
        }
    }
    function displayData(khoes) {
        const tableBody = document.getElementById('dicvuTable').getElementsByTagName('tbody')[0];
        tableBody.innerHTML = '';
        khoes.forEach(nv => {
            const formattedDonGia = parseFloat(nv.DonGia).toLocaleString('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });
            const row = document.createElement('tr');
            row.innerHTML = `
                        <td>${nv.TenDichVu}</td>
                        <td>${nv.DonViTinh}</td>
                        <td>${formattedDonGia}</td>
                        <td>
                            <a href="/Admin/DichVus/api/DichVus/Edit/${nv.IddichVu}" class="dropdown-item"><i class="dw dw-edit2"></i> Cập nhật</a>
                            <a href="/Admin/DichVus/api/DichVus/Detail/${nv.IddichVu}" class="dropdown-item"><i class="dw dw-eye"></i> Chi tiết</a>
                            <a href="#" class="dropdown-item delete-item" data-id="${nv.IddichVu}"><i class="dw dw-delete"></i> Xóa</a>
                        </td>
                    `;
            tableBody.appendChild(row);
        });

        // Add delete functionality
        const deleteLinks = document.querySelectorAll('.delete-item');
        deleteLinks.forEach(link => {
            link.addEventListener('click', async function (e) {
                e.preventDefault();
                const id = this.getAttribute('data-id');

                const confirmDelete = confirm('Bạn có chắc chắn muốn xóa dịch vụ này?');
                if (confirmDelete) {
                    try {
                        const deleteResponse = await fetch(`DichVus/api/DichVus/Delete/${id}`, {
                            method: 'DELETE'
                        });

                        if (deleteResponse.ok) {
                            alert('Dịch vụ đã được xóa thành công!');
                            this.closest('tr').remove();
                        } else {
                            console.error('Failed to delete the item:', deleteResponse.status);
                            alert('Không thể xóa dịch vụ. Vui lòng thử lại.');
                        }
                    } catch (error) {
                        console.error('Delete error:', error);
                        alert('Đã xảy ra lỗi khi xóa dịch vụ. Vui lòng thử lại.');
                    }
                }
            });
        });

    }

    function setupPaginationControls(totalItems) {
        const totalPages = Math.ceil(totalItems / pageSize);
        const paginationContainer = document.getElementById('paginationContainer');
        paginationContainer.innerHTML = '';

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.onclick = () => changePage(i);
            paginationContainer.appendChild(button);
        }
    }

    function changePage(pageNumber) {
        fetchKhoes(pageNumber);
    }
    document.addEventListener('DOMContentLoaded', () => {
        fetchKhoes(currentPage);
    });
</script>