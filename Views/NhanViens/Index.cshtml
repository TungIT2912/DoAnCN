@model WebQuanLyNhaKhoa.Data.NhanVien

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="table-wrapper">
    <div class="table-title">
        <h2>Danh sách nhân viên</h2>
        <a href="Create" class="btn btn-outline-primary"><i class="bi bi-plus-square-fill"></i> Thêm mới</a>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-hover" id="nhanVienTable">
            <thead class="thead-dark text-center">
                <tr>
                    <th scope="col">Tên nhân viên</th>
                    <th scope="col">Số Điện Thoại</th>
                    <th scope="col">Chức vụ</th>
                    <th scope="col">Kinh nghiệm</th>
                    <th scope="col">Địa Chỉ</th>
                    <th scope="col">Ảnh đại diện</th>
                    <th scope="col">Email</th>
                    <th scope="col">Role</th>
                    <th scope="col" style="width: 200px;height:100px">Action</th>
                </tr>
            </thead>
            <tbody id="tableBody" class="text-center">
                <!-- Dynamic Content goes here -->
            </tbody>
        </table>
    </div>
    <div id="paginationContainer" class="pagination-controls"></div>
</div>

<script>
    let currentPage = 1;
    const pageSize = 10;

    async function fetchNhanViens(page) {
        try {
            const response = await fetch(`NhanViens/api/NhanViens?pageNumber=${page}&pageSize=${pageSize}`);
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const result = await response.json();
            const nhanViens = result.data;
            totalItems = result.totalItems; // Set totalItems from API response

            displayData(nhanViens);  // Function to display data in the table
            setupPaginationControls(totalItems);  // Function to set up pagination controls
        } catch (error) {
            console.error('Fetch error:', error);
            alert('Không thể tải dữ liệu. Vui lòng thử lại.');
        }
    }

    function displayData(nhanViens) {
        const tableBody = document.getElementById('tableBody');
        tableBody.innerHTML = ''; // Clear previous rows

        nhanViens.forEach(nv => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${nv.ten}</td>
                <td>${nv.sdt}</td>
                <td>${nv.tenCv}</td>
                <td>${nv.kinhNghiem}</td>
                <td>${nv.diachi}</td>
                <td><img src="${nv.hinh}" alt="Hình" width="40px" class="avatar-sm rounded-circle me-2" /></td>
                <td>${nv.email}</td>
                <td>${nv.role}</td>
                <td>
                    <a href="/Admin/NhanViens/api/NhanViens/Edit/${nv.maNv}" class="dropdown-item"><i class="dw dw-edit2"></i> Cập nhật</a>
                    <a href="/Admin/NhanViens/api/NhanViens/Detail/${nv.maNv}" class="dropdown-item"><i class="dw dw-eye"></i> Chi tiết</a>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    function setupPaginationControls(totalItems) {
        const totalPages = Math.ceil(totalItems / pageSize);
        const paginationContainer = document.getElementById('paginationContainer');
        paginationContainer.innerHTML = ''; // Clear existing buttons

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.onclick = () => changePage(i);
            paginationContainer.appendChild(button);
        }
    }

    function changePage(pageNumber) {
        fetchNhanViens(pageNumber); // Fetch data for the selected page
    }

    // Initial data fetch on page load
    document.addEventListener('DOMContentLoaded', () => {
        fetchNhanViens(currentPage);
    });
</script>
